if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def ad = rootProject.ext.android
def dep = rootProject.ext.dependencies
def appId = rootProject.ext.appId

android {
    compileSdkVersion ad.compileSdkVersion
    buildToolsVersion ad.buildToolsVersion

    defaultConfig {
        if (!isModule) {
            applicationId appId.module1
        }

        minSdkVersion ad.minSdkVersion
        targetSdkVersion ad.targetSdkVersion
        versionCode ad.versionCode
        versionName ad.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    sourceSets {
        main {
            if (isModule) {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    //model的时候移除无用的包
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation dep.appcompat
    implementation dep.constraintlayout
    testImplementation dep.junit

    annotationProcessor project(':lib_compiler')
    implementation project(':base')
}
